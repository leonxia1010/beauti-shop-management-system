name: Simple CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20'

jobs:
  # Single job combining all essential checks
  quality-check:
    runs-on: ubuntu-latest
    name: Quality Check (Lint, Test, Build)

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: beauty_shop
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup database
        run: |
          cd apps/api-gateway
          npx prisma generate
          npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/beauty_shop

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Run tests
        run: npm run test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/beauty_shop
          REDIS_URL: redis://localhost:6379

      - name: Build applications
        run: |
          # Build core applications only (skip mobile for simplicity)
          npx nx build admin-web
          npx nx build api-gateway
          npx nx build batch-jobs

  # Optional deployment placeholder (uncomment when needed)
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: quality-check
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Deploy placeholder
  #       run: echo "Deploy step - configure based on your deployment target"